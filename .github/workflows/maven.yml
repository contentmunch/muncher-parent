name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21 with GPG & Maven Central credentials
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          server-id: central
          server-username: ${{ secrets.OSSRH_USERNAME }}
          server-password: ${{ secrets.OSSRH_PASSWORD }}

      - name: Set up Maven settings
        run: |
          mkdir -p $HOME/.m2
          echo "${{ secrets.MAVEN_SETTINGS_XML }}" > $HOME/.m2/settings.xml

      - name: Import GPG Key
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --pinentry-mode loopback --import
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Build & Test with Maven
        run: mvn -B verify -Pquality

      - name: Bump minor version
        run: |
          NEW_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | awk -F. '{$2+=1; $3=0; print $1 "." $2 "." $3}')
          echo "New version: $NEW_VERSION"
          mvn --batch-mode versions:set -DnewVersion=$NEW_VERSION
          mvn versions:commit
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit & Push Version Bump
        run: |
          git config user.name "GitHub CI"
          git config user.email "ci@github.com"
          git commit -am "chore(release): bump to version $NEW_VERSION"
          git push
        env:
          NEW_VERSION: ${{ env.NEW_VERSION }}

      - name: Sign and Publish to Maven Central
        run: |
          mvn -B -Ppublish -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}" -Dgpg.pinentryMode=loopback deploy
